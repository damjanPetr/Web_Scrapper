@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 96%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --approved: 100 50% 50%;
    --approved--foreground: 100 20%, 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40%, 98%;

    --approved: 123 55.24% 22.01%;
    --approved--foreground: 200 40%, 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;

    .bg-destructive {
      &:hover {
        filter: hue-rotate(-20deg);
        color: white;
      }
    }
  }

  * {
    @apply border-border;
  }
  body {
    @apply text-foreground;
    /* background: linear-gradient(to top, #3f2b96, #a8c0ff); */
    background-image: url("https://www.transparenttextures.com/patterns/arabesque.png");
    position: relative;
  }
  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to top,
      hsla(251, 55%, 38%, 0.866),
      hsla(223, 100%, 83%, 0.478)
    );
  }
  &.dark {
    &:after {
      background-color: hsla(90, 28%, 60%, 0.696);
    }
  }
}

.theme.dark {
  background-image: linear-gradient(to top, #273441 0%, #e0c3fc 100%);
}

@layer components {
  .bg-background {
    background-color: #343d57;
    background-image: url("https://www.transparenttextures.com/patterns/clean-gray-paper.png");
  }
  .text-gradient {
    --color1: #00a651;
    --color2: #72c6ef;
    --color3: #c08844;
    display: inline-block;
    line-height: 1;
    background: linear-gradient(
      to top left,
      var(--color1),
      var(--color2),
      var(--color3)
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    transition: all 1s ease-in-out;
  }
  .dark {
    .text-gradient {
      --color3: #f8d0a0;
      --color1: #77ffb9;
      --color2: #a2d3ec;
    }
  }
  .window_popup {
    position: absolute;
    width: 100%;
    z-index: 0;
    left: 0;
    top: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    animation: enter 1s 0s ease-in-out forwards;
    .item {
      @media (width <= 800px) {
        height: 10px !important;
        width: 200px !important;
      }
      --dir: to right;
      /* border-radius: var(--radius); */
      transition: all 1s ease-in-out;
      height: 25px;
      width: 200px;
      flex-shrink: 1;
      .dark & {
        background: linear-gradient(var(--dir), #273441 0%, #e0c3fc 100%);
      }
      background: linear-gradient(var(--dir), #e1ebf6 0%, #e0c3fc 100%);
      margin-top: 20px;
    }

    .left_side {
      .item {
        --dir: to left;
        .dark & {
          --dir: to right;
        }
        &:nth-child(1) {
          transform: rotate(30deg);
        }
        &:nth-child(2) {
          transform: rotate(20deg);
        }
        &:nth-child(3) {
          transform: rotate(10deg);
          width: 400px;
        }
      }
    }
    .right_side {
      .item {
        margin-left: auto;
        --dir: to right;
        .dark & {
          --dir: to left;
        }
        &:nth-child(1) {
          transform: rotate(-30deg);
        }
        &:nth-child(2) {
          transform: rotate(-20deg);
        }
        &:nth-child(3) {
          transform: rotate(-10deg);
          width: 400px;
        }
      }
    }
    &.active {
      .left_side {
        .item {
          &:nth-child(1) {
            transform: rotate(130deg) translateX(-10px);
          }
          &:nth-child(2) {
            transform: rotate(120deg) translateX(-20px);
          }
          &:nth-child(3) {
            transform: rotate(110deg) translateX(-30px);
            width: 400px;
          }
        }
      }
      .right_side {
        .item {
          &:nth-child(1) {
            transform: rotate(-130deg) translateX(10px);
          }
          &:nth-child(2) {
            transform: rotate(-120deg) translateX(20px);
          }
          &:nth-child(3) {
            transform: rotate(-110deg) translateX(30px);
            width: 400px;
          }
        }
      }
    }
  }
}

.hero {
  display: grid;
  grid-template: "a b" auto/1fr 2fr;
  gap: 1rem;
  @media (width <= 800px) {
    grid-template: "a" auto "b" auto/1fr;
  }
}

@keyframes enter {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(100px);
  }
}
.bubble {
  z-index: 1;
  position: relative;
  color: white;
  padding: 0.5em 1em;
  outline: none;
  border: none;
  overflow: hidden;
  transition: color 0.2s ease-in-out;
  &:hover {
    cursor: pointer;
    /* color: #161616; */
    &::before {
      transform: translate3d(-50%, 50%, 0) scale3d(15, 15, 15);
    }
  }
  &:focus {
    outline: hsl(var(--ring)) 2px solid;
    &:before {
      transform: translate3d(-50%, 50%, 0) scale3d(15, 15, 15);
    }
  }
  &::before {
    --test_color: orange;
    content: "";
    z-index: -1;
    position: absolute;
    bottom: 100%;
    left: 100%;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    background-color: var(--test_color);
    transform-origin: center;
    transform: translate3d(-50%, 50%, 0) scale3d(0, 0, 0);
    transition: all 0.2s ease-in-out;
  }
  &.active {
    background-color: hsl(128, 100%, 50%);
    &:before {
      --test_color: hsl(128, 100%, 20%);
    }
  }
  .dark & {
    /* filter: invert(1); */
    &.active {
      background-color: hsl(128, 40%, 50%);
      &::before {
        --test_color: hsl(196, 92%, 21%);
      }
    }
  }
}
